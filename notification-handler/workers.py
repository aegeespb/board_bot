import json
import requests


def vk_get_user_info(user_id, token):
    r = requests.get("https://api.vk.com/method/users.get?user_ids={}&access_token={}&v=5.0".format(user_id, token))
    first_name = r.json()["response"][0]["first_name"]
    last_name  = r.json()["response"][0]["last_name"]
    return (first_name, last_name)

def vk_get_info(msg, token):
    if (msg["type"] == "message_new"):
        first_name, last_name = vk_get_user_info(msg["object"]["message"]["from_id"], token)
        return "*–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ VK*: {} {} –Ω–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É –í–ö: {}".format(first_name, last_name, msg["object"]["message"]["text"])
    elif (msg["type"] == "group_join"):
        first_name, last_name = vk_get_user_info(msg["object"]["user_id"], token)
        return "*–≠—Ç–æ—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –≤—Å—Ç—É–ø–∏–ª –≤ –Ω–∞—à—É –≥—Ä—É–ø–ø—É*: {} {} http://vk.com/id{}".format(first_name, last_name, msg["object"]["user_id"])
    elif (msg["type"] == "group_leave"):
        first_name, last_name = vk_get_user_info(msg["object"]["user_id"], token)
        return "*–≠—Ç–æ—Ç —É–µ–±–æ–∫ –≤—ã—à–µ–ª –∏–∑ –≥—Ä—É–ø–ø—ã üò°*: {} {} http://vk.com/id{}".format(first_name, last_name, msg["object"]["user_id"])
    elif (msg["type"] == "wall_post_new"):
        return "*–ù–æ–≤—ã–π –ø–æ—Å—Ç –Ω–∞ —Å—Ç–µ–Ω–µ*"
    else:
        return "Unknown notification"


def notify(tg_bot, src, msg, token, listeners):
    if (src == "vk"):
        info = vk_get_info(msg, token)
    else:
        return

    for chat_id, settings in listeners.items():
        tg_bot.sendMessage(
            chat_id=chat_id,
            text=info,
            parse_mode='Markdown'
        )
